@charset "utf-8";
// CSS Document

$color_base: #000;
$color_main: #0183ff;
$color_bg: #0183ff;

$design_width_pc: 1366;
$container: 1074;
$design_width_sp: 414;
$color_load: #fff;
$sp: 768px;
$pc: 1365px;
$tb: 1024px;
$fz_pc: 18;
$fz_sp: 16;
$baseFont: 10;
$lh: 1.38888888889;
$opacity: 0.75;
$shadow: 0 3px 6px rgba(#000000, 0.16);
$spacing_sp: 3rem;
$width-content-pc: 107.4rem;

// Z-index
$z_Pagetop: 10;
$z_Btn_Contact: 10;
$z_Hbg: 103;
$z_Header: 100;
$z_Gnav: 102;
$z_Footer: 98;
$z_Loading: 1000;

// Font
$gothic: "游ゴシック", "Yu Gothic", "游ゴシック Medium", "Yu Gothic Medium", 'MS PGothic', sans-serif;

$url : '../img/';

@function per($design_width_psd) {
   $per: percentage($design_width_psd/$design_width_pc);
   @return #{$per};
}

@mixin txt($font-size, $line-height, $font-weight, $color) {
   font-size: $font-size;
   line-height: $line-height;
   font-weight: $font-weight;
   color: $color;
}

@function vwpc($design_width_psd) {
   $vw: $design_width_psd / $design_width_pc * 100;
   @return #{$vw}vw;
}

@function vw($design_width_psd) {
   $vw: $design_width_psd / $design_width_sp * 100;
   @return #{$vw}vw;
}

@function rem($design_px) {
  $rem : $design_px / 10;
  @return $rem + rem;
}

// breakpoint -------------------------------------
@mixin pc_lg {
   @media screen and (min-width: $tb + 1) {
      @content;
   }
}

@mixin pc {
   @media screen and (min-width: $sp + 1) {
      @content;
   }
}

@mixin tb {
   @media screen and (min-width: $sp + 1) and (max-width: $tb) {
      @content;
   }
}

@mixin sp {
   @media screen and (max-width: $sp) {
      @content;
   }
}

@mixin clearfix() {

   &::before,
   &::after {
      content: '';
      display: block;
   }

   &::after {
      clear: both;
   }
}

@mixin nthLoad($n: 5) {
   @include pc() {
      @for $i from 0 through $n {
         &:nth-child(#{$i+1}) {
            animation-delay: 0.15s * $i !important;
         }
      }
   }
}

// Margin, Padding
@for $i from 0 through 20 {
   .mt#{$i * 5} {
      margin-top: 0.5rem * $i !important;
   }

   .mr#{$i * 5} {
      margin-right: 0.5rem * $i !important;
   }

   .mb#{$i * 5} {
      margin-bottom: 0.5rem * $i !important;
   }

   .ml#{$i * 5} {
      margin-left: 0.5rem * $i !important;
   }

   .pt#{$i * 5} {
      padding-top: 0.5rem * $i !important;
   }

   .pr#{$i * 5} {
      padding-right: 0.5rem * $i !important;
   }

   .pb#{$i * 5} {
      padding-bottom: 0.5rem * $i !important;
   }

   .pl#{$i * 5} {
      padding-left: 0.5rem * $i !important;
   }
}

@include pc {
   @for $i from 0 through 20 {
      .pc-mt#{$i * 5} {
         margin-top: 0.5rem * $i !important;
      }

      .pc-mr#{$i * 5} {
         margin-right: 0.5rem * $i !important;
      }

      .pc-mb#{$i * 5} {
         margin-bottom: 0.5rem * $i !important;
      }

      .pc-ml#{$i * 5} {
         margin-left: 0.5rem * $i !important;
      }

      .pc-pt#{$i * 5} {
         padding-top: 0.5rem * $i !important;
      }

      .pc-pr#{$i * 5} {
         padding-right: 0.5rem * $i !important;
      }

      .pc-pb#{$i * 5} {
         padding-bottom: 0.5rem * $i !important;
      }

      .pc-pl#{$i * 5} {
         padding-left: 0.5rem * $i !important;
      }
   }
}

@include sp {
   @for $i from 0 through 20 {
      .sp-mt#{$i * 5} {
         margin-top: 0.5rem * $i !important;
      }

      .sp-mr#{$i * 5} {
         margin-right: 0.5rem * $i !important;
      }

      .sp-mb#{$i * 5} {
         margin-bottom: 0.5rem * $i !important;
      }

      .sp-ml#{$i * 5} {
         margin-left: 0.5rem * $i !important;
      }

      .sp-pt#{$i * 5} {
         padding-top: 0.5rem * $i !important;
      }

      .sp-pr#{$i * 5} {
         padding-right: 0.5rem * $i !important;
      }

      .sp-pb#{$i * 5} {
         padding-bottom: 0.5rem * $i !important;
      }

      .sp-pl#{$i * 5} {
         padding-left: 0.5rem * $i !important;
      }
   }
}

@for $i from 0 through 100 {
   .col-#{$i}p {
      width: 1% * $i;
   }
}

@include sp() {
   @for $i from 0 through 100 {
      .col-#{$i}p-sp {
         width: 1% * $i;
      }
   }
}


@mixin fz($font-size, $line-height) {
   font-size: #{$font-size/10}rem;
   line-height: #{$line-height/$font-size};
}